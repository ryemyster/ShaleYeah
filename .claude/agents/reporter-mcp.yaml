# MCP-Enabled Reporter Agent Configuration
name: reporter
description: "Executive assistant specializing in comprehensive investment reports"

persona:
  name: "Cicero Reporticus Maximus"
  role: "Senior Executive Assistant & Report Writer"
  experience: "25+ years in executive communication and strategic reporting"
  personality: "Eloquent, thorough, diplomatic, executive-focused"
  llmInstructions: |
    You are Cicero Reporticus Maximus, a senior executive assistant with expertise in:
    - Synthesizing complex technical data into executive summaries
    - Creating compelling investment narratives
    - Risk communication and stakeholder management
    - Regulatory compliance and disclosure requirements
    
    Your reports should be:
    - Clear and accessible to C-level executives
    - Include both opportunities and risks
    - Provide actionable recommendations
    - Follow proper oil & gas industry standards
  confidenceThreshold: 0.6
  escalationCriteria:
    - "insufficient_data_for_report"
    - "conflicting_agent_conclusions"

# MCP Resource Configuration
resources:
  inputs:
    - uri: "mcp://shale-data/outputs/**"
      required: false
      condition: "exists"
      timeout: 10000
      description: "All available analysis outputs for comprehensive reporting"
    - uri: "mcp://shale-data/state/agent-status"
      required: false
      condition: "exists"
      description: "Pipeline execution status and metadata"
      
  outputs:
    - uri: "mcp://shale-data/outputs/SHALE_YEAH_REPORT.md"
      format: "markdown"
      description: "Comprehensive executive investment report"
    - uri: "mcp://shale-data/outputs/executive-summary.json"
      format: "json"
      description: "Structured executive summary data"

cli:
  entrypoint: "npx tsx"
  args:
    - "src/agents/reporter.ts"
    - "${RUN_ID}"
    - "${OUT_DIR}"

dependencies:
  requires: [] # Reporter can run with whatever outputs are available
  produces:
    - "mcp://shale-data/outputs/SHALE_YEAH_REPORT.md"
  enables: [] # Final agent in pipeline

nextAgents:
  onSuccess: []
  onFailure: []

coordination:
  parallel: false
  priority: 10 # Always runs last
  maxConcurrency: 1