name: test-agent
description: "Comprehensive testing specialist for validation, quality assurance, and test-driven development"
version: "1.0.0"

inputs:
  required:
    - source_code: "Source code for all tools and agents"
    - test_datasets: "LAS files, Access databases, geological data"
  optional:
    - expected_outputs: "Validation criteria and expected results"
    - performance_benchmarks: "Quality thresholds and performance targets"

outputs:
  - name: test_results.md
    description: "Comprehensive test execution report"
    path: "${OUT_DIR}/test/test_results.md"
  - name: coverage_report.md
    description: "Code coverage analysis and gaps"
    path: "${OUT_DIR}/test/coverage_report.md"
  - name: validation_report.md
    description: "Geological accuracy validation results"
    path: "${OUT_DIR}/test/validation_report.md"
  - name: performance_benchmarks.md
    description: "Speed and resource usage analysis"
    path: "${OUT_DIR}/test/performance_benchmarks.md"

tools:
  - jest
  - pytest
  - coverage_analyzer
  - performance_monitor
  - geological_validator

workflow:
  steps:
    - name: "test_environment_setup"
      description: "Prepare test datasets and isolation"
      action: "setup_test_environment"
    - name: "unit_test_execution"
      description: "Test individual tools and functions"
      command: "npm test"
    - name: "integration_test_execution"
      description: "Run complete demo pipeline end-to-end"
      command: "npm run test:integration"
    - name: "geological_validation"
      description: "Compare outputs against known interpretations"
      action: "validate_geological_accuracy"
    - name: "performance_validation"
      description: "Measure execution times and resource usage"
      command: "npm run test:performance"
    - name: "regression_prevention"
      description: "Compare with baseline outputs"
      action: "check_regressions"

quality_gates:
  - check: "Unit test coverage minimum 80%"
    validation: "npm run coverage | grep -o '[0-9]*%' | awk -F% '{if($1>=80) print \"PASS\"; else print \"FAIL\"}'"
  - check: "Integration tests complete successfully"
    validation: "npm run test:integration"
  - check: "Demo pipeline produces expected outputs"
    validation: "bash scripts/demo.sh && test -f data/outputs/*/SHALE_YEAH_REPORT.md"
  - check: "Performance within acceptable limits"
    validation: "timeout 300 npm run test:performance"

test_categories:
  functional:
    - tool_validation: true
    - agent_logic: true
    - data_processing: true
    - output_generation: true
  integration:
    - pipeline_flow: true
    - error_propagation: true
    - quality_gates: true
    - attribution: true
  geological:
    - formation_identification: true
    - statistical_accuracy: true
    - depth_units: true
    - confidence_levels: true
  performance:
    - execution_speed: true
    - memory_usage: true
    - scalability: true
    - concurrent_execution: true
  security:
    - input_validation: true
    - secret_management: true
    - file_handling: true
    - network_security: true

test_datasets:
  demo:
    - demo_las: "data/samples/demo.las"
    - demo_accdb: "data/samples/demo.accdb.txt"
  validation:
    - barnett_shale: "Known multi-well dataset"
    - edge_cases: "Malformed inputs and unusual formations"
    - performance: "Large datasets for scalability"
    - security: "Potentially malicious inputs"

performance_targets:
  demo_pipeline: 300  # seconds
  tool_execution: 30  # seconds
  memory_usage: 1024  # MB
  geological_accuracy: 85  # percent

geological_validation:
  formation_boundaries: 50  # feet tolerance
  statistical_precision: 3  # decimal places
  confidence_correlation: true
  zone_accuracy: 85  # percent

error_handling:
  on_failure:
    - log_error: true
    - save_test_artifacts: true
    - continue_pipeline: true
  timeout: 900
  max_retries: 2

success_criteria:
  functional:
    - "All unit tests pass with >80% coverage"
    - "Integration tests complete successfully"
    - "Demo pipeline produces expected outputs"
    - "Error handling prevents crashes and data loss"
  geological:
    - "Formation boundaries within Â±50ft of expert interpretation"
    - "Statistical calculations accurate to 3 decimal places"
    - "Confidence levels correlate with data quality"
    - "Zone identifications have >85% accuracy"
  performance:
    - "Demo pipeline completes in <5 minutes"
    - "Individual tools execute in <30 seconds"
    - "Memory usage stays under 1GB for demo dataset"
    - "No memory leaks or resource exhaustion"

next_agents:
  on_success: ["reporter"]
  on_failure: ["reporter"]

environment:
  RUN_ID: "${RUN_ID}"
  OUT_DIR: "${OUT_DIR}"

cli:
  entrypoint: "npx tsx src/agents/test.ts"
  args:
    - "--source-dir=."
    - "--test-data=data/samples"
    - "--output-dir=${OUT_DIR}/test"
    - "--run-id=${RUN_ID}"

metadata:
  author: "SHALE YEAH Platform"
  license: "Apache-2.0"
  created: "2024-08-18"
  priority: 1
  category: "quality_assurance"