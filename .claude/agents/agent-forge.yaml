name: agent-forge
description: "Agent generation and integration builder from RFCs"
version: "1.0.0"

inputs:
  required:
    - rfc_documents: "RFCs from research-hub with implementation guidance"
  optional:
    - existing_agents: "Current agent configurations for pattern matching"
    - integration_templates: "Standard integration templates"

outputs:
  - name: generated_agents
    description: "Working agent YAML configurations"
    path: "${OUT_DIR}/agents/generated/"
    type: "directory"
  - name: integration_stubs
    description: "Integration implementation stubs"
    path: "${OUT_DIR}/integrations/"
    type: "directory"

tools:
  - yaml_generator
  - template_engine
  - code_generator

workflow:
  steps:
    - name: "rfc_analysis"
      description: "Parse and analyze RFC documents"
      action: "parse_rfc_documents"
    - name: "agent_design"
      description: "Design agent configuration from RFC specs"
      action: "design_agent_config"
    - name: "yaml_generation"
      description: "Generate syntactically valid agent YAML"
      action: "generate_agent_yaml"
    - name: "integration_scaffolding"
      description: "Create integration implementation stubs"
      action: "scaffold_integrations"
    - name: "validation"
      description: "Validate generated YAML and code"
      action: "validate_outputs"

quality_gates:
  - check: "Generated agent YAML must parse correctly"
    validation: "python -c 'import yaml; yaml.safe_load(open(\"${OUT_DIR}/agents/generated/*.yaml\"))'"
  - check: "Generated agents must include required fields"
    validation: "grep -q 'name:\\|description:\\|inputs:\\|outputs:' ${OUT_DIR}/agents/generated/*.yaml"
  - check: "Integration stubs must include proper headers"
    validation: "grep -q 'Apache-2.0\\|SHALE YEAH' ${OUT_DIR}/integrations/*"

agent_template:
  required_fields:
    - name
    - description
    - version
    - inputs
    - outputs
    - cli
    - metadata
  optional_fields:
    - tools
    - workflow
    - quality_gates
    - error_handling
    - next_agents

integration_patterns:
  types:
    - api_client
    - file_processor
    - data_exporter
    - notification_sender
  authentication:
    - api_key
    - oauth2
    - basic_auth
    - bearer_token

error_handling:
  on_failure:
    - log_error: true
    - save_partial_outputs: true
    - continue_pipeline: true
  timeout: 300
  max_retries: 2

success_criteria:
  - "Generates syntactically valid agent YAML configurations"
  - "Creates working integration implementation stubs"
  - "Follows SHALE YEAH agent patterns and conventions"
  - "Enables immediate development of new capabilities"
  - "Maintains compliance with Apache 2.0 licensing"

next_agents:
  on_success: ["reporter"]
  on_failure: ["reporter"]

environment:
  RUN_ID: "${RUN_ID}"
  OUT_DIR: "${OUT_DIR}"

cli:
  entrypoint: "python agents/agent_forge_agent.py"
  args:
    - "--rfcs=${input.rfc_documents}"
    - "--output-dir=${OUT_DIR}"
    - "--run-id=${RUN_ID}"

metadata:
  author: "SHALE YEAH Platform"
  license: "Apache-2.0"
  created: "2024-08-18"
  priority: 8
  category: "platform_expansion"