name: Release with SLSA Provenance and Cosign

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  id-token: write
  attestations: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Clean build artifacts
      run: npm run clean

    - name: Run tests and type check
      run: |
        npm run type-check
        npm run lint || echo "Linting not configured, skipping"

    - name: Build TypeScript project
      run: |
        npm run build || echo "Build script not configured, using typescript compilation"

    - name: Create release package
      run: |
        mkdir -p dist
        tar -czf dist/shale-yeah-${{ github.ref_name }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=dist \
          --exclude=data/outputs \
          .

    - name: Generate artifact hash
      id: hash
      run: |
        cd dist
        echo "hashes=$(sha256sum * | base64 -w0)" >> "$GITHUB_OUTPUT"

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: dist/

  provenance:
    needs: [release]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0
    with:
      base64-subjects: "${{ needs.release.outputs.hashes }}"
      upload-assets: true

  sign:
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download release assets
      uses: actions/download-artifact@v4
      with:
        name: release-assets
        path: dist/

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.9.2

    - name: Sign release assets
      run: |
        cd dist
        for file in *; do
          cosign sign-blob --yes "$file" --output-signature "${file}.sig"
          cosign sign-blob --yes "$file" --output-certificate "${file}.pem"
        done

    - name: Upload signed assets
      uses: actions/upload-artifact@v4
      with:
        name: signed-assets
        path: dist/

  verify-branding:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify SHALE YEAH branding
      run: |
        export RUN_ID=release-$(date +%Y%m%d-%H%M%S)
        mkdir -p data/outputs/$RUN_ID
        echo "Generated with SHALE YEAH (c) Ryan McDonald / Ascendvent LLC - Apache-2.0" > data/outputs/$RUN_ID/test.md
        bash scripts/verify-branding.sh